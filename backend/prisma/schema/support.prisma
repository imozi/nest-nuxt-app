model SupportMail {
  id           String               @id @default(uuid()) @db.Uuid
  name         String               @db.Text
  email        String               @unique @db.VarChar(100)
  position     String               @db.Text
  organization String               @db.Text
  question     String               @db.Text
  status       SupportStatus?       @default(new)
  history      SupportMailHistory[] @relation(name: "support_mails_history")
  remoteId     String               @map("remote_id") @db.Text
  createdAt    DateTime             @default(now()) @map("created_at")
  updatedAt    DateTime             @updatedAt @map("updated_at")

  @@index([email, name, organization, createdAt])
  @@map("support_mails")
}

model SupportMailHistory {
  id           String         @id @default(uuid()) @db.Uuid
  name         String         @db.Text
  email        String         @db.VarChar(100)
  position     String         @db.Text
  organization String         @db.Text
  question     String         @db.Text
  status       SupportStatus? @default(new)
  remoteId     String         @map("remote_id") @db.Text
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  parent       SupportMail?   @relation(name: "support_mails_history", fields: [parentId], references: [id])
  parentId     String?        @map("parent_id") @db.Uuid

  @@index([email, name, organization, createdAt])
  @@map("support_mails_history")
}

enum SupportStatus {
  new
  progress
  technical
  closed
  deferred
  viewed
}
